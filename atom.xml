<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HappyCoder&#39;Home</title>
  
  
  <link href="https://zhangkaibin0921.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhangkaibin0921.github.io/"/>
  <updated>2021-12-04T00:34:39.461Z</updated>
  <id>https://zhangkaibin0921.github.io/</id>
  
  <author>
    <name>zhangkaibin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>古典密码原理实现</title>
    <link href="https://zhangkaibin0921.github.io/2021/11/29/%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E5%8E%9F%E7%90%86%E5%AE%9E%E7%8E%B0/"/>
    <id>https://zhangkaibin0921.github.io/2021/11/29/%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E5%8E%9F%E7%90%86%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-11-29T09:23:46.000Z</published>
    <updated>2021-12-04T00:34:39.461Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、ceasar"><a href="#1、ceasar" class="headerlink" title="1、ceasar"></a>1、ceasar</h1>    <figure class="figure-image">      <img src="/picture/kaisa.png" alt="" loading="lazy" />      <figcaption></figcaption>    </figure>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cipher=<span class="string">&quot;zhongguo&quot;</span>   <span class="comment">#明文</span></span><br><span class="line">move=<span class="number">3</span>              <span class="comment">#移位数</span></span><br><span class="line">t=<span class="string">&quot;&quot;</span>                <span class="comment">#密文</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> cipher:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;a&#x27;</span>&lt;=i&lt;=<span class="string">&#x27;z&#x27;</span>:</span><br><span class="line">        t+=<span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)+((<span class="built_in">ord</span>(i)-<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)+move)%<span class="number">26</span>))</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&#x27;A&#x27;</span>&lt;=i&lt;=<span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">        t+=<span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)+((<span class="built_in">ord</span>(i)-<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)+move)%<span class="number">26</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        t+=i</span><br><span class="line"><span class="built_in">print</span>(t)</span><br><span class="line">        </span><br><span class="line"><span class="comment">#如果要解密的话，秘钥变为负数</span></span><br><span class="line"><span class="comment">#如zhongguo加密后得到ckrqjjxr</span></span><br><span class="line"><span class="comment">#现需要解密，则直接将move取-3即可</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2、affine"><a href="#2、affine" class="headerlink" title="2、affine"></a>2、affine</h1>    <figure class="figure-image">      <img src="/picture/affine.png" alt="" loading="lazy" />      <figcaption></figcaption>    </figure>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#加密</span></span><br><span class="line">cipher=<span class="string">&#x27;zhongguo&#x27;</span><span class="comment">#明文</span></span><br><span class="line">t=<span class="string">&#x27;&#x27;</span><span class="comment">#密文</span></span><br><span class="line">a=<span class="number">3</span></span><br><span class="line">b=<span class="number">4</span> <span class="comment">#E(x)=ax+b,gcd(a,26)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> cipher:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;a&#x27;</span>&lt;=i&lt;=<span class="string">&#x27;z&#x27;</span>:</span><br><span class="line">        t+=<span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)+((a*(<span class="built_in">ord</span>(i)-<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>))+b)%<span class="number">26</span>))</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&#x27;A&#x27;</span>&lt;=i&lt;=<span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">        t+=<span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)+((a*(<span class="built_in">ord</span>(i)-<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>))+b)%<span class="number">26</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        t+=i</span><br><span class="line"><span class="built_in">print</span>(t)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#解密</span></span><br><span class="line">t = <span class="string">&#x27;bzurwwmu&#x27;</span>  <span class="comment"># 密文</span></span><br><span class="line">cipher = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 明文</span></span><br><span class="line">a = <span class="number">3</span></span><br><span class="line">b = <span class="number">4</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">26</span>):</span><br><span class="line">    <span class="keyword">if</span> (i*a) % <span class="number">26</span> == <span class="number">1</span>:</span><br><span class="line">        a1 = i</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> t:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;a&#x27;</span> &lt;= i &lt;= <span class="string">&#x27;z&#x27;</span>:</span><br><span class="line">        cipher += <span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)+((a1*(<span class="built_in">ord</span>(i)-<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)-b)) % <span class="number">26</span>))</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&#x27;A&#x27;</span> &lt;= i &lt;= <span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">        cipher += <span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)+((a1*(<span class="built_in">ord</span>(i)-<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)-b)) % <span class="number">26</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cipher += i</span><br><span class="line"><span class="built_in">print</span>(cipher)</span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure><h1 id="3、多表代换密码"><a href="#3、多表代换密码" class="headerlink" title="3、多表代换密码"></a>3、多表代换密码</h1><p>先说下这个方法必要的基础知识</p><p>因为解密的时候需要矩阵求逆，所以写下方法，这个是最基本的方法</p>    <figure class="figure-image">      <img src="/picture/keniju1.jpg" alt="" loading="lazy" />      <figcaption></figcaption>    </figure>  <p>行列式怎么求好像也不太记得了，看个例子应该就能马上想起来了</p>    <figure class="figure-image">      <img src="/picture/keniju2.jpg" alt="" loading="lazy" />      <figcaption></figcaption>    </figure>  <p>可逆矩阵另一种比较简单一点的求法</p>    <figure class="figure-image">      <img src="/picture/keniju3.jpg" alt="" loading="lazy" />      <figcaption></figcaption>    </figure>      <figure class="figure-image">      <img src="/picture/duobiao.jpg" alt="" loading="lazy" />      <figcaption></figcaption>    </figure>  ]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、ceasar&quot;&gt;&lt;a href=&quot;#1、ceasar&quot; class=&quot;headerlink&quot; title=&quot;1、ceasar&quot;&gt;&lt;/a&gt;1、ceasar&lt;/h1&gt;
    &lt;figure class=&quot;figure-image&quot;&gt;
      &lt;img src</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Crypto在线解密网站</title>
    <link href="https://zhangkaibin0921.github.io/2021/11/28/Crypto%E5%9C%A8%E7%BA%BF%E8%A7%A3%E5%AF%86%E7%BD%91%E7%AB%99/"/>
    <id>https://zhangkaibin0921.github.io/2021/11/28/Crypto%E5%9C%A8%E7%BA%BF%E8%A7%A3%E5%AF%86%E7%BD%91%E7%AB%99/</id>
    <published>2021-11-28T12:40:20.000Z</published>
    <updated>2021-12-10T11:32:28.061Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://cmd5.com/">MD5</a><br><a href="http://tool.geekapp.cn/">MD5加密</a><br><a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">栏栅密码</a><br><a href="http://www.urlencode.com.cn/">url</a><br><a href="http://www.hiencode.com/rot13.html">ROT13</a><br><a href="http://www.txttool.com/t/?id=Mzg1">morse</a><br><a href="http://www.hiencode.com/quoted.html">Quoted-printable</a><br><a href="https://www.qqxiuzi.cn/bianma/kaisamima.php">凯撒</a><br><a href="https://quipqiup.com/">进阶凯撒爆破</a><br><a href="https://www.codeeeee.com/encrypt/rabbit.html">Rabbit</a><br><a href="http://tools.jb51.net/jisuanqi/factor_calc">分解质因数</a><br><a href="http://tool.geekapp.cn/base64.php">Base64</a><br><a href="https://ctf.bugku.com/tool/base32">Base32</a><br><a href="https://ctf.bugku.com/tool/base16">Base16</a><a href="http://code.mcdvisa.com/">中文电码</a><br><a href="https://www.xiao84.com/tools/103177.html">猪圈密码</a><br><a href="http://www.hiencode.com/uu.html">UUencode</a><br><a href="https://www.sojson.com/hexadecimal.html">十六进制转文本</a><br><a href="https://www.bugku.com/tools/jsfuck/#">jsfuck</a><br><a href="http://hi.pcmoe.net/buddha.html">与佛论禅+MD5+兽音+熊音+AES+BASE64</a><br><a href="http://www.hiencode.com/cvencode.html">核心价值观</a></p><p><a href="https://www.qqxiuzi.cn/bianma/rot5-13-18-47.php">ROT5/13/18/47编码转换</a></p><p>[培根加密](<a href="http://tool.bugku.com/peigen/">在线工具|培根密码加解密 (bugku.com)</a>)</p><p>[维吉尼亚加密](<a href="https://www.qqxiuzi.cn/bianma/weijiniyamima.php">维吉尼亚密码在线加密解密 - 千千秀字 (qqxiuzi.cn)</a>)</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://cmd5.com/&quot;&gt;MD5&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://tool.geekapp.cn/&quot;&gt;MD5加密&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.qqxiuzi.cn/bianma/zhalanmima.p</summary>
      
    
    
    
    
    <category term="Crypto" scheme="https://zhangkaibin0921.github.io/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>reverse ez_xor writeup</title>
    <link href="https://zhangkaibin0921.github.io/2021/11/28/reverse-ez-xor-writeup/"/>
    <id>https://zhangkaibin0921.github.io/2021/11/28/reverse-ez-xor-writeup/</id>
    <published>2021-11-28T11:17:01.000Z</published>
    <updated>2021-11-28T11:17:23.209Z</updated>
    
    <content type="html"><![CDATA[<p>拿到ez_xor.exe附件直接丢进PE<br><img src="https://img-blog.csdnimg.cn/2a919819266940108748e2605589b227.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5byA5b-D5pif5Lq6,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>可以看到是64位exe文件，丢进ida64<br>Shift+F12查看字符串（如果是笔记本电脑的话，F12自带热键，先按Fn，即Fn+Shift+F12）<br><img src="https://img-blog.csdnimg.cn/6204f03ae29740ff9039c7cfc41b3fa8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5byA5b-D5pif5Lq6,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>一般在这里找有没有和flag相关的字符串，可以看到这里是有的，双击进入<br><img src="https://img-blog.csdnimg.cn/064b1084cb0745d6b4beb3bdc19f2c8a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5byA5b-D5pif5Lq6,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>找到该字符串，点击上图所示，进入main方法<br>会进入流程图界面，按空格进入文本界面<br>可以看到汇编代码了，按F5（同理如果是笔记本记得按Fn+F5）反汇编，转换成C语言<br><img src="https://img-blog.csdnimg.cn/40c5945e9d804f2a8b9ce453e8960077.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5byA5b-D5pif5Lq6,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>现在就可以分析代码了，这里的C语言可能数据类型之类的会和我们平时的有点不一样<br>比如说这里的v3=0i64，0i64表示int64_t类型的0，其实就基本上可以理解为0<br>这里代码可以看到关键异或代码while ( (char)(v3 ^ v5[v3]) == dword_403020[v3] )<br><img src="https://img-blog.csdnimg.cn/c717f970db7d4487b7eafd0a6e1f18f2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5byA5b-D5pif5Lq6,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/6143bf343b1c42e3a388745da52b5818.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5byA5b-D5pif5Lq6,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>可以看到该字符串每个字符对应的ASCII码（这里按R键即可看到对应的字符）<br>现在已知dword_403020和v3（v3就是0~31），逐个进行异或即可得到flag</p><p>写一个Python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s=[<span class="number">0x35</span>, <span class="number">0x62</span>, <span class="number">0x37</span>, <span class="number">0x30</span>, <span class="number">0x33</span>, <span class="number">0x3D</span>, <span class="number">0x60</span>, <span class="number">0x63</span>, <span class="number">0x3F</span>, <span class="number">0x3D</span>, <span class="number">0x6C</span>,<span class="number">0x69</span>, <span class="number">0x6D</span>, <span class="number">0x6F</span>, <span class="number">0x68</span>, <span class="number">0x6D</span>, <span class="number">0x72</span>, <span class="number">0x77</span>, <span class="number">0x20</span>, <span class="number">0x70</span>, <span class="number">0x76</span>, <span class="number">0x73</span>,<span class="number">0x72</span>, <span class="number">0x2F</span>, <span class="number">0x2E</span>, <span class="number">0x21</span>, <span class="number">0x7E</span>, <span class="number">0x2B</span>, <span class="number">0x28</span>, <span class="number">0x25</span>, <span class="number">0x2C</span>, <span class="number">0x29</span>]</span><br><span class="line">flag=[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>)] <span class="comment">#从给出的代码很容易看到flag是32位的</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    flag[i]=i^s[i]</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>即可得出flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;拿到ez_xor.exe附件直接丢进PE&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2a919819266940108748e2605589b227.png?x-oss-process=image/watermark,type_ZHJ</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zhangkaibin0921.github.io/2021/10/24/hello-world/"/>
    <id>https://zhangkaibin0921.github.io/2021/10/24/hello-world/</id>
    <published>2021-10-24T08:30:40.072Z</published>
    <updated>2021-11-29T09:23:06.775Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span> <span class="comment">#双引号里面这篇博客的标题</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
